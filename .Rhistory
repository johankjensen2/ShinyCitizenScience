# Entry of pollinators
h3(i18n$t("Enter the total number of individuals and species you saw for each pollinator group:")),
HTML("<br/>","<br/>"),
fluidRow(
column(1),
column(2, align="left", HTML("<br/>", "<br/>"), h4(i18n$t("Bumblebees"))),
column(3, align="center",
numericInput("bombus_tot_individ_5x5", label = h4(i18n$t("Individuals:")), value = 0, width = "75%")),
column(3, align="center",
numericInput("bombus_tot_species_5x5", label = h4(i18n$t("Species:")), value = 0, width = "75%"))),
fluidRow(
column(1),
column(2, align="left", HTML("<br/>"), h4(i18n$t("Honeybees"))),
column(3, align="center",
numericInput("mellifera_tot_individ_5x5", label = i18n$t(""), value = 0, width = "75%")),
column(3, align="center",
numericInput("mellifera_tot_species_5x5", label = i18n$t(""), value = 0, width = "75%"))),
fluidRow(
column(1),
column(2, align="left", HTML("<br/>"), h4(i18n$t("Solitary bees"))),
column(3, align="center",
numericInput("apis_tot_individ_5x5", label = i18n$t(""), value = 0, width = "75%")),
column(3, align="center",
numericInput("apis_tot_species_5x5", label = i18n$t(""), value = 0, width = "75%"))),
fluidRow(
column(1),
column(2, align="left", HTML("<br/>"), h4(i18n$t("Wasps"))),
column(3, align="center",
numericInput("vespid_tot_individ_5x5", label = i18n$t(""), value = 0, width = "75%")),
column(3, align="center",
numericInput("vespid_tot_species_5x5", label = i18n$t(""), value = 0, width = "75%"))),
fluidRow(
column(1),
column(2, align="left", HTML("<br/>"), h4(i18n$t("Beetles"))),
column(3, align="center",
numericInput("coleoptera_tot_individ_5x5", label = i18n$t(""), value = 0, width = "75%")),
column(3, align="center",
numericInput("coleoptera_tot_species_5x5", label = i18n$t(""), value = 0, width = "75%"))),
fluidRow(
column(1),
column(2, align="left", HTML("<br/>"), h4(i18n$t("True bugs"))),
column(3, align="center",
numericInput("hemiptera_tot_individ_5x5", label = i18n$t(""), value = 0, width = "75%")),
column(3, align="center",
numericInput("hemiptera_tot_species_5x5", label = i18n$t(""), value = 0, width = "75%"))),
fluidRow(
column(1),
column(2, align="left", HTML("<br/>"), h4(i18n$t("Butterflies"))),
column(3, align="center",
numericInput("lepidoptera_tot_individ_5x5", label = i18n$t(""), value = 0, width = "75%")),
column(3, align="center",
numericInput("lepidoptera_tot_species_5x5", label = i18n$t(""), value = 0, width = "75%"))),
fluidRow(
column(1),
column(2, align="left", HTML("<br/>"), h4(i18n$t("Moths"))),
column(3, align="center",
numericInput("moth_tot_individ_5x5", label = i18n$t(""), value = 0, width = "75%")),
column(3, align="center",
numericInput("moth_tot_species_5x5", label = i18n$t(""), value = 0, width = "75%"))),
fluidRow(
column(1),
column(2, align="left", HTML("<br/>"), h4(i18n$t("Hoverflies"))),
column(3, align="center",
numericInput("syrphidae_tot_individ_5x5", label = i18n$t(""), value = 0, width = "75%")),
column(3, align="center",
numericInput("syrphidae_tot_species_5x5", label = i18n$t(""), value = 0, width = "75%"))),
fluidRow(
column(1),
column(2, align="left", HTML("<br/>"), h4(i18n$t("Other flies and mosquitos"))),
column(3, align="center",
numericInput("other_diptera_tot_individ_5x5", label = i18n$t(""), value = 0, width = "75%")),
column(3, align="center",
numericInput("other_diptera_tot_species_5x5", label = i18n$t(""), value = 0, width = "75%"))),
HTML("<br/>", "<br/>"), #whitespace
actionButton("showPollinators", i18n$t("Show pollinator data")), #button
HTML("<br/>", "<br/>", "<br/>"), #whitespace
plotlyOutput("pollinators_1", width = 780, height = 420),
HTML("<br/>", "<br/>"), # white space
div(class = "buttonagency",
actionBttn("info_pollinator_graph", i18n$t("Tip!"), style = "jelly", color = "primary")),
HTML("<br/>", "<br/>"), # white space
#floweriness
h3(i18n$t("Enter the data for the plants:")),
HTML("<br/>", "<br/>"), #whitespace
sliderInput(inputId = "floweriness_5x5", label = h4(i18n$t("Rate your 5x5m survey plot on the floweriness-scale:")),
1, 3, 1, ticks = F),
HTML("<br/>","<br/>", "<br/>"), #whitespace
#flower species
fluidRow(
column(2),
column(4, align="center",
numericInput("flowers_tot_species_5x5", label = h4(i18n$t("How many different species of flowering plants did you find?")),
value = 0, width = "80%")),
column(4, align="center", textInput("flower_species_freeText_5x5", label = i18n$t("(Optional) If you identified the species, write the three most common below"),
placeholder = "E.g.: daisy, lavender, orchid", width = "80%"))),
HTML("<br/>", "<br/>", "<br/>", "<br/>"), #whitespace
sliderInput(inputId = "feedback_pollinators", label = h4(i18n$t("How do you rate your experience with using this survey? (Use slider below)")),
1, 5, 3, ticks = F),
imageOutput("plants_footer"),
),
##########################################
######       INVERTEBRATES 1x1      ######
##########################################
tabItem(tabName = "minibeasts",  align = "center",
imageOutput("minibeast_header"),
## title text
fluidRow(
column(1, align="right",
h1(i18n$t("S4"))),
column(6, align="left",
h2(i18n$t("Minibeasts and Leaves Survey")))),
h5(id="minibeast-subhead", i18n$t("Below you can enter the data from the survey of minibeasts and leaves in the 1x1m squares (S4):"), align = "left"),
HTML("<br/>", "<br/>", "<br/>", "<br/>"), #whitespace
# Entry of age and number
h3(i18n$t("Participants and time:")),
HTML("<br/>"), #whitespace
fluidRow(
column(1),
column(5, align="center",
numericInput("no_partic_minibeast", label = i18n$t("How many participants are in your survey group?"),
value = 0, width = "75%")),
column(5, align="center",
numericInput("age_partic_minibeast", label = i18n$t("What is the average age of the participants?"),
value = 0, width = "75%"))),
HTML("<br/>", "<br/>"), #whitespace
## Date and time
fluidRow(
column(1),
column(5, align="center",
dateInput("date_minibeast", i18n$t("Select the date when the surveying took place:"), width = "75%")),
column(5, align="center",
timeInput("time_minibeast", i18n$t("Enter the time when the surveying started (use the dials or enter the time directly):"),
value = Sys.time(), seconds = FALSE))),
HTML("<br/>","<br/>"), #whitespace
h3(i18n$t("Weather and temperature:")),
HTML("<br/>"), #whitespace
fluidRow(
column(6, align="center",
radioGroupButtons(inputId = "windLevel_minibeast", label = i18n$t("How windy was it during the survey? (From leaves not moving to moving much)"),
choices = c(`<i class='fa fa-wind' style='color:#ecf2f6; font-size: 12px;'></i>` = "Leaves not moving",
`<i class='fa fa-wind' style='color:#ecf2f6; font-size: 16px;'></i>` = "Leaves moving slightly",
`<i class='fa fa-wind' style='color:#ecf2f6; font-size: 20px;'></i>` = "Leaves moving much"),
justified = TRUE, status = "accent_blue", size = "lg", width = "50%")),
column(6,
sliderInput("temp_minibeast", i18n$t("What was the temperature outside during the survey? (Â°C)"),
5, 40, 5, ticks = T))),
radioButtons("weather_minibeast", i18n$t("What was the weather like during the survey? (Single choice)"),
choiceNames =
list(icon("sun"), icon("cloud-sun"), icon("cloud"), icon("cloud-rain")),
choiceValues = list("Sunny", "Sunny and cloudy", "Cloudy", "Rainy")),
HTML("<br/>", "<br/>", "<br/>"), #whitespace
numericInput("no_1x1_squares", label = i18n$t("How many 1x1m squares did you survey?"),
value = 1, width = "25%"),
HTML("<br/>","<br/>"), #whitespace
#Free-text entry of 1x1 habitats
textInput("habitat_1x1_freeText", i18n$t("What was the dominant habitat for each square? Denote the number of squares with this habitat as the dominant type in parentheses:"),
placeholder = "E.g.: Flower beds or pots (1), tall grass and wildflowers (2), short grass (1)", width = "60%"),
HTML("<br/>","<br/>"), #whitespace
# Entry of pollinators
h3(i18n$t("Enter the total number of individuals and species you saw for each minibeast group:")),
HTML("<br/>","<br/>"),
fluidRow(
column(1),
column(2, align="left", HTML("<br/>"), h4(i18n$t("Earthworms"))),
column(3, align="center",
numericInput("annelida_tot_indiv_1x1", label = i18n$t("Individuals:"), value = 0, width = "75%")),
column(3, align="center",
numericInput("annelida_tot_species_1x1", label = i18n$t("Species:"), value = 0, width = "75%"))),
fluidRow(
column(1),
column(2, align="left", HTML("<br/>"), h4(i18n$t("Ants"))),
column(3, align="center",
numericInput("hymenoptera_tot_individ_1x1", label = i18n$t(""), value = 0, width = "75%")),
column(3, align="center",
numericInput("hymenoptera_tot_species_1x1", label = i18n$t(""), value = 0, width = "75%"))),
fluidRow(
column(1),
column(2, align="left", HTML("<br/>"), h4(i18n$t("Centipedes and millipedes"))),
column(3, align="center",
numericInput("myriapoda_tot_individ_1x1", label = i18n$t(""), value = 0, width = "75%")),
column(3, align="center",
numericInput("myriapoda_tot_species_1x1", label = i18n$t(""), value = 0, width = "75%"))),
fluidRow(
column(1),
column(2, align="left", HTML("<br/>"), h4(i18n$t("Woodlice"))),
column(3, align="center",
numericInput("isopoda_tot_individ_1x1", label = i18n$t(""), value = 0, width = "75%")),
column(3, align="center",
numericInput("isopoda_tot_species_1x1", label = i18n$t(""), value = 0, width = "75%"))),
fluidRow(
column(1),
column(2, align="left", HTML("<br/>"), h4(i18n$t("Spiders and harvestmen"))),
column(3, align="center",
numericInput("arachnid_tot_individ_1x1", label = i18n$t(""), value = 0, width = "75%")),
column(3, align="center",
numericInput("arachnid_tot_species_1x1", label = i18n$t(""), value = 0, width = "75%"))),
fluidRow(
column(1),
column(2, align="left", HTML("<br/>"), h4(i18n$t("Beetles"))),
column(3, align="center",
numericInput("coleoptera_tot_individ_1x1", label = i18n$t(""), value = 0, width = "75%")),
column(3, align="center",
numericInput("coleoptera_tot_species_1x1", label = i18n$t(""), value = 0, width = "75%"))),
fluidRow(
column(1),
column(2, align="left", HTML("<br/>"), h4(i18n$t("True bugs"))),
column(3, align="center",
numericInput("hemioptera_tot_individ_1x1", label = i18n$t(""), value = 0, width = "75%")),
column(3, align="center",
numericInput("hemiptera_tot_species_1x1", label = i18n$t(""), value = 0, width = "75%"))),
fluidRow(
column(1),
column(2, align="left", HTML("<br/>"), h4(i18n$t("Insect larvae"))),
column(3, align="center",
numericInput("caterpillar_tot_individ_1x1", label = i18n$t(""), value = 0, width = "75%")),
column(3, align="center",
numericInput("caterpillar_tot_species_1x1", label = i18n$t(""), value = 0, width = "75%"))),
fluidRow(
column(1),
column(2, align="left", HTML("<br/>"), h4(i18n$t("Snails and slugs"))),
column(3, align="center",
numericInput("gastropoda_tot_individ_1x1", label = i18n$t(""), value = 0, width = "75%")),
column(3, align="center",
numericInput("gastropoda_tot_species_1x1", label = i18n$t(""), value = 0, width = "75%"))),
fluidRow(
column(1),
column(2, align="left", HTML("<br/>"), h4(i18n$t("Other minibeasts"))),
column(3, align="center",
numericInput("other_tot_individ_1x1", label = i18n$t(""), value = 0, width = "75%")),
column(3, align="center",
numericInput("other_diptera_tot_species_1x1", label = i18n$t(""), value = 0, width = "75%"))),
HTML("<br/>", "<br/>"), #whitespace
actionButton("showInvertebrates", i18n$t("Show minibeast data")), #map button
HTML("<br/>", "<br/>", "<br/>"), #whitespace
plotOutput("invertebrates_1", width = 780, height = 540),
HTML("<br/>", "<br/>"), # white space
div(class = "buttonagency",
actionBttn("info_minibeast_graph", i18n$t("Tip!"), style = "jelly", color = "primary")),
HTML("<br/>","<br/>","<br/>","<br/>"), #whitespace
#floweriness
fluidRow(
column(6, align="center",
sliderInput(inputId = "vegetation_cover_1x1", label = i18n$t("Rate the mean of your 1x1m survey plot on the vegetation cover-scale:"),
1, 3, 1, ticks = F)),
column(6, align="center",
numericInput("leaf_diversity_1x1", label = i18n$t("How many different types of leaves do you find in all 1x1m squares?"),
value = 0, width = "50%"))),
HTML("<br/>", "<br/>"), #whitespace
#feedback
sliderInput(inputId = "feedback_minibeasts", label = i18n$t("How do you rate your experience with using this survey? (Use slider below)"),
1, 5, 3, ticks = F),
imageOutput("minibeast_footer"),
),
##########################################
######         SUBMIT DATA          ######
##########################################
tabItem(tabName = "submit", align = "center",
h3(i18n$t("Submit data")),
HTML("<br/>", "<br/>"), # white space
fluidRow(
column(2),
column(8, align = "center",
h4(i18n$t("Thank you for completing the data entry! Please control that all answers are correct before downloading the data. Kindly send this file to anna.persson [at] cec.lu.se so your data can be included in the research project and added to the website. Thank you for your participation.")))),
HTML("<br/>", "<br/>", "<br/>", "<br/>"), # white space
#download data button
downloadButton('downloadData', i18n$t('Download'), height ="150%"),
HTML("<br/>", "<br/>", "<br/>", "<br/>"), # white space
imageOutput("LtL_banner_dwn"),
),
##########################################
######          ABOUT US           ######
#########################################
tabItem(tabName = "about", align = "center",
h3(i18n$t("About us")),
HTML("<br/>", "<br/>"), # white space
fluidRow(
column(2),
column(8, align = "center",
h4(i18n$t("Natural Nations is an international school grounds biodiversity project funded by Erasmus+ and led by Learning through Landscapes in partnership with Naturskolan i Lund, Lund University, Birdlife Malta and Sociedad Espanola de Ornitologia SEO (Birdlife Spain). To help schools improve their school grounds for wildlife, the Natural Nations project has developed survey methodology to record pollinating insects, minibeasts and leaves, bird populations and habitats and vegetation with supporting educational and cultural heritage resources.")))),
HTML("<br/>", "<br/>", "<br/>", "<br/>","<br/>", "<br/>", "<br/>", "<br/>"), # white space
imageOutput("allLogo", height = 100), # banner logo)
HTML("<br/>", "<br/>", "<br/>", "<br/>", "<br/>"),
imageOutput("nbisLogo", height = 100), # banner logo)
HTML("<br/>", "<br/>")
)
#########################################
),
useSweetAlert(),
useShinyjs()) #custom layou for navbar
)
server <- function(input, output, session) {
# Whenever a field is filled, aggregate all form data
formData <- reactive({
data <- sapply(fields, function(x) input[[x]])
data
})
# When country is selected, this will feed into shiny.i18n for translatio
observeEvent(input$countrySelect, {
update_lang(session, input$selected_language)
})
i18n_r <- reactive({ #extra function that reads in a new translated function
i18n
})
observe({
updateSelectInput(session, "dominant_habitat",
label = i18n_r()$t('What is the dominant habitat in your school grounds (select one):'),
choices = i18n_r()$t(c("","Plant beds or flowerpots", "Tall grass, wildflowers", "Trees and bushes", "Bare ground",
"Man-made homes", "Damp places", "Short grass", "Bare walls or fences", "Concrete or tarmac")))
updateTextInput(session, "plantSpecies_freeText", i18n_r()$t("Enter the three most common species and numbers below:"),
placeholder = i18n_r()$t("E.g.: oak (7), birch (4), Taxus baccata (2)"))
updateTextInput(session, "birdSpecies_freeText", i18n_r()$t("If you saw any aditional species, enter the three most common species and numbers below:"),
placeholder = i18n_r()$t("E.g.: hooded crow (3), rook (4), common gull (2)"))
updateTextInput(session, "flower_species_freeText_5x5", i18n_r()$t("(Optional) If you identified the species, write the three most common below"),
placeholder = i18n_r()$t( "E.g.: daisy, lavender, orchid"))
updateTextInput(session, "habitat_1x1_freeText", i18n_r()$t("What was the dominant habitat for each square? Denote the number of squares with this habitat as the dominant type in parentheses:"),
placeholder = i18n_r()$t("E.g.: Flower beds or pots (1), tall grass and wildflowers (2), short grass (1)"))
})
# When the Submit button is clicked, save the form data BEES
observeEvent(input$showMap, {
saveData(formData())
})
# When the Submit button is clicked, save the form data HABITAT
observeEvent(input$showHabitat, {
saveData(formData())
})
# When the Submit button is clicked, save the form data YARD
observeEvent(input$showYard, {
saveData(formData())
})
# When the Submit button is clicked, save the form data BIRDS
observeEvent(input$showBirds, {
saveData(formData())
})
# When the Submit button is clicked, save the form data POLLINATORS
observeEvent(input$showPollinators, {
saveData(formData())
})
# When the Submit button is clicked, save the form data INVERTEBRATES
observeEvent(input$showInvertebrates, {
saveData(formData())
})
observeEvent(input$info_map, {
sendSweetAlert(
session = session,
title = "Information",
text = i18n$t("The map is interactive. Try zooming in on your country to see which other schools have participated. Hover with the mouse to display names. Did you enter the wrong coordinates? Just re-enter the correct ones and press the Show map-button again!"),
type = "info"
)
})
observeEvent(input$info_habitat_graph_1, {
sendSweetAlert(
session = session,
title = i18n$t("About the graph"),
text = i18n$t("This graph shows the most common habitat on school grounds across all participating schools. Question: Was this what you were expecting? Why do you think school grounds look the way they do today? \n About the graph: This type of graph is called a barplot. The higher the bars, the more schools have selected this answer."),
type = "info"
)
})
observeEvent(input$info_habitat_graph_2, {
sendSweetAlert(
session = session,
title = i18n$t("About the graph"),
text = i18n$t("This graph shows the number of different tree and shrub species recorded by each school and how large the school grounds are. Question: Do you see any pattern? Do you need a large school ground to have many species of plants? About the graph: This type of graph is called a scatter plot. A dot high up shows that this school has a lot of species. A dot far to the right shows the school grounds are large."),
type = "info"
)
})
observeEvent(input$info_bird_graph, {
sendSweetAlert(
session = session,
title = i18n$t("About the graph"),
text = i18n$t("This graph shows the number of birds seen by each school and how many trees and shrubs that have been recorded. Question: Is there any pattern? Would you have seen more birds if you had more trees? About the graph: This type of graph is called a scatter plot. A dot high up shows that this school has a lot of birds. A dot far to the right shows the school grounds have many trees and shrubs."),
type = "info"
)
})
observeEvent(input$info_pollinator_graph, {
sendSweetAlert(
session = session,
title = i18n$t("About the graph"),
text = i18n$t("This graph shows which pollinator group was the most common at your school. Question: Which was the most common pollinator at your school? Were there any groups you did not see and if so, is there anything you can do to help them? About the graph: This type of graph is called a pie-chart. It show the proportion of pollinators recorded in percent. Hover with the mouse to see the absolute values (number of individuals)."),
type = "info"
)
})
observeEvent(input$info_minibeast_graph, {
sendSweetAlert(
session = session,
title = i18n$t("About the graph"),
text = i18n$t("This graph shows the number of minibeasts per square meter for each school. Question: What does it mean to have a lot of minibeast per square meter? Which school has seen the most minibeasts in total? About the graph: This type of graph is called a bar plot. The higher the bars, the more minibeasts have been recorded per square meter."),
type = "info"
)
})
# Show the previous responses
# (update with current response when Submit is clicked)
output$responses <- DT::renderDataTable({
input$showMap
loadData()
})
# render map
output$mymap <- renderLeaflet({
input$showMap
loadData()
mapFunc()
})
# Show the previous responses
# (update with current response when Submit is clicked)
output$responses <- DT::renderDataTable({
input$showHabitat
loadData()
})
# Show the previous responses
# (update with current response when Submit is clicked)
output$responses <- DT::renderDataTable({
input$showYard
loadData()
})
# Show the previous responses
# (update with current response when Submit is clicked)
output$responses <- DT::renderDataTable({
input$showBirds
loadData()
})
# Show the previous responses
# (update with current response when Submit is clicked)
output$responses <- DT::renderDataTable({
input$showPollinators
loadData()
})
# Show the previous responses
# (update with current response when Submit is clicked)
output$responses <- DT::renderDataTable({
input$showInvertebrates
loadData()
})
# render barplot of most common habitat
output$habitat_1 <- renderPlot({
input$showHabitat
loadData()
plot_func1_habitat()
}, bg="transparent")
# render correlation tree species ~ yard
output$yard_1 <- renderPlot({
input$showYard
loadData()
plot_func2_yard()
}, bg="transparent")
output$birds_1 <- renderPlot({
input$showBirds
loadData()
plot_func3_birds()
}, bg="transparent")
output$pollinators_1 <- renderPlotly({
input$showPollinators
loadData()
plot_func4_pollinators()
})
output$invertebrates_1 <- renderPlot({
input$showInvertebrates
loadData()
plot_func5_invertebrates()
}, bg="transparent")
# Download button
output$downloadData <- downloadHandler(
filename = function() {paste('data-', Sys.Date(), '-', length(responses$School), '.csv', sep='')
},
content = function(file) {write.csv2(t(formData()), file)
}
)
# render natnat logo
output$natNatLogo <- renderImage({list(src = "./logo2.png",
contentType = "image/png",alt = "logo", height = 120)}, deleteFile = FALSE)
# render footer logo
output$footerLogo <- renderImage({list(src = "./footer.png",
contentType = "image/png",alt = "logo", height = 120)}, deleteFile = FALSE)
# render logo
output$allLogo <- renderImage({list(src = "./logo1.png",
contentType = "image/png",alt = "logo", height = 200)}, deleteFile = FALSE)
output$nbisLogo <- renderImage({list(src = "./nbisLogo.png",
contentType = "image/png",alt = "logo", height = 120)}, deleteFile = FALSE)
# render banners
output$bird_footer <- renderImage({list(src = "./banners/bird_footer.png",
contentType = "image/png",alt = "banner", height = 200)}, deleteFile = FALSE)
output$habitat_footer <- renderImage({list(src = "./banners/habitat_footer.png",
contentType = "image/png",alt = "banner", height = 200)}, deleteFile = FALSE)
output$minibeast_footer <- renderImage({list(src = "./banners/minibeast_footer.png",
contentType = "image/png",alt = "banner", height = 200)}, deleteFile = FALSE)
output$plants_footer <- renderImage({list(src = "./banners/plants_footer.png",
contentType = "image/png",alt = "banner", height = 200)}, deleteFile = FALSE)
output$LtL_banner_dwn <- renderImage({list(src = "./banners/LtLBanner_dwn.png",
contentType = "image/png",alt = "banner", height = 200)}, deleteFile = FALSE)
output$bird_header <- renderImage({list(src = "./banners/bird_header.png",
contentType = "image/png",alt = "banner", height = 200)}, deleteFile = FALSE)
output$habitat_header <- renderImage({list(src = "./banners/habitat_header.png",
contentType = "image/png",alt = "banner", height = 200)}, deleteFile = FALSE)
output$minibeast_header <- renderImage({list(src = "./banners/minibeast_header.png",
contentType = "image/png",alt = "banner", height = 200)}, deleteFile = FALSE)
output$plants_header <- renderImage({list(src = "./banners/plants_header.png",
contentType = "image/png",alt = "banner", height = 200)}, deleteFile = FALSE)
runjs({'
var el2 = document.querySelector(".skin-blue");
el2.className = "skin-blue sidebar-mini";
var clicker = document.querySelector(".sidebar-toggle");
clicker.id = "switchState";
'})
onclick('switchState',
runjs({'
var title = document.querySelector(".logo")
if (title.style.visibility == "hidden") {
title.style.visibility = "visible";
} else {
title.style.visibility = "hidden";}
}
'}))
}
shinyApp(ui, server)
