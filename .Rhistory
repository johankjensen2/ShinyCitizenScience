fluidRow(
column(3, align="left", HTML("<br/>"), strong(i18n$t("Great tit (Parus major)"))),
column(5, align="left",
numericInput("parus_no", label = i18n$t(""), value = 0, width = "50%")),
column(2, align="center",
checkboxGroupInput("parus_pres", i18n$t(""),
choiceNames = list(i18n$t("")), choiceValues = list("present")))),
#Cyanistes
fluidRow(
column(3, align="left", HTML("<br/>"), strong(i18n$t("Blue tit (Cyanistes caeruleus)"))),
column(5, align="left",
numericInput("cyanistes_no", label = i18n$t(""), value = 0, width = "50%")),
column(2, align="center",
checkboxGroupInput("cyanistes_pres", i18n$t(""),
choiceNames = list(i18n$t("")), choiceValues = list("present")))),
#Passer domesticus
fluidRow(
column(3, align="left", HTML("<br/>"), strong(i18n$t("House sparrow (Passer domesticus)"))),
column(5, align="left",
numericInput("passer_dom_no", label = i18n$t(""), value = 0, width = "50%")),
column(2, align="center",
checkboxGroupInput("passer_dom_pres", i18n$t(""),
choiceNames = list(i18n$t("")), choiceValues = list("present")))),
#Passer montanus
fluidRow(
column(3, align="left", HTML("<br/>"), strong(i18n$t("Tree sparrow (Passer montanus)"))),
column(5, align="left",
numericInput("passer_mont_no", label = i18n$t(""), value = 0, width = "50%")),
column(2, align="center",
checkboxGroupInput("passer_mont_pres", i18n$t(""),
choiceNames = list(i18n$t("")), choiceValues = list("present")))),
#Motacilla alba
fluidRow(
column(3, align="left", HTML("<br/>"), strong(i18n$t("White wagtail (Motacilla alba)"))),
column(5, align="left",
numericInput("motacilla_no", label = i18n$t(""), value = 0, width = "50%")),
column(2, align="center",
checkboxGroupInput("motacilla_pres", i18n$t(""),
choiceNames = list(i18n$t("")), choiceValues = list("present")))),
#Sturnus
fluidRow(
column(3, align="left", HTML("<br/>"), strong(i18n$t("Common starling (Sturnus vulgaris)"))),
column(5, align="left",
numericInput("sturnus_no", label = i18n$t(""), value = 0, width = "50%")),
column(2, align="center",
checkboxGroupInput("sturnus_pres", i18n$t(""),
choiceNames = list(i18n$t("")), choiceValues = list("present")))),
#Apus
fluidRow(
column(3, align="left", HTML("<br/>"), strong(i18n$t("Swift (Apus apus)"))),
column(5, align="left",
numericInput("apus_no", label = i18n$t(""), value = 0, width = "50%")),
column(2, align="center",
checkboxGroupInput("apus_pres", i18n$t(""),
choiceNames = list(i18n$t("")), choiceValues = list("present")))),
#Streptopelia
fluidRow(
column(3, align="left", HTML("<br/>"), strong(i18n$t("Collared dove (Streptopelia decaocto)"))),
column(5, align="left",
numericInput("streptopelia_no", label = i18n$t(""), value = 0, width = "50%")),
column(2, align="center",
checkboxGroupInput("streptopelia_pres", i18n$t(""),
choiceNames = list(i18n$t("")), choiceValues = list("present")))),
#Erithacus
fluidRow(
column(3, align="left", HTML("<br/>"), strong(i18n$t("European robin (Erithacus rubecula)"))),
column(5, align="left",
numericInput("erithacus_no", label = i18n$t(""), value = 0, width = "50%")),
column(2, align="center",
checkboxGroupInput("erithacus_pres", i18n$t(""),
choiceNames = list(i18n$t("")), choiceValues = list("present")))),
#Columba
fluidRow(
column(3, align="left", HTML("<br/>"), strong(i18n$t("Wood pigeon (Columba palumbus)"))),
column(5, align="left",
numericInput("columba_no", label = i18n$t(""), value = 0, width = "50%")),
column(2, align="center",
checkboxGroupInput("columba_pres", i18n$t(""),
choiceNames = list(i18n$t("")), choiceValues = list("present")))),
#Phoenicurus
fluidRow(
column(3, align="left", HTML("<br/>"), strong(i18n$t("Redstart (Phoenicurus phoenicurus)"))),
column(5, align="left",
numericInput("phoenicurus_no", label = i18n$t(""), value = 0, width = "50%")),
column(2, align="center",
checkboxGroupInput("phoenicurus_pres", i18n$t(""),
choiceNames = list(i18n$t("")), choiceValues = list("present")))),
#Pica
fluidRow(
column(3, align="left", HTML("<br/>"), strong(i18n$t("Magpie (Pica pica)"))),
column(5, align="left",
numericInput("pica_no", label = i18n$t(""), value = 0, width = "50%")),
column(2, align="center",
checkboxGroupInput("pica_pres", i18n$t(""),
choiceNames = list(i18n$t("")), choiceValues = list("present")))),
#Sylvia arti
fluidRow(
column(3, align="left", HTML("<br/>"), strong(i18n$t("Eurasian blackcap (Sylvia articapilla)"))),
column(5, align="left",
numericInput("sylvia_arti_no", label = i18n$t(""), value = 0, width = "50%")),
column(2, align="center",
checkboxGroupInput("sylvia_arti_pres", i18n$t(""),
choiceNames = list(i18n$t("")), choiceValues = list("present")))),
#Sylvia melano
fluidRow(
column(3, align="left", HTML("<br/>"), strong(i18n$t("Sardinian warbler (Sylvia melanocephala)"))),
column(5, align="left",
numericInput("sylvia_melano_no", label = i18n$t(""), value = 0, width = "50%")),
column(2, align="center",
checkboxGroupInput("sylvia_melano_pres", i18n$t(""),
choiceNames = list(i18n$t("")), choiceValues = list("present")))),
HTML("<br/>"), #whitespace
#Free-text entry of specific species
textInput("birdSpecies_freeText", i18n$t("If you saw any aditional species, enter the three most common species and numbers below:"),
value = "E.g.: hooded crow (3), rook (4), common gull (2)", width = "100%"),
HTML("<br/>", "<br/>"), #whitespace
actionButton("showBirds", i18n$t("Show bird data")), #map button
HTML("<br/>", "<br/>"), #whitespace
plotOutput("birds_1", width = 780, height = 420),
HTML("<br/>", "<br/>"), #whitespace
sliderInput(inputId = "feedback_birds", label = i18n$t("How do you rate your experience with using this survey? (Use slider below)"),
1, 5, 3, ticks = F)
),
##########################################
######        POLLINATORS 5x5       ######
##########################################
tabItem(tabName = "pollinators", align = "center",
## title text
h2(id="pollinator-heading", i18n$t("Pollinators and flowers in the 5x5m square")),
tags$style(HTML("#pollinator-heading{color: #7030A0;}")), #ID call for custom colour
i18n$t("Below you can enter the data from the survey of pollinators and flowers in the 5x5m square (Part C):"), #Instructions
HTML("<br/>","<br/>"), #whitespace
strong(i18n$t("Enter the area (m2) of the following habitat in your 5x5 survey plot:")),
HTML("<br/>","<br/>"),
fluidRow(
column(6, align="center",
numericInput("area_5x5_planted", label = i18n$t("Plant beds or flowerpots"), value = 0, width = "50%")),
column(6,
numericInput("area_5x5_damp", label = i18n$t("Damp places"), value = 0, width = "50%"))
),
fluidRow(
column(6, align="center",
numericInput("area_5x5_woody", label = i18n$t("Trees and bushes"), value = 0, width = "50%")),
column(6,
numericInput("area_5x5_shortGrass", label = i18n$t("Short grass"), value = 0, width = "50%"))
),
fluidRow(
column(6, align="center",
numericInput("area_5x5_ground", label = i18n$t("Bare ground"), value = 0, width = "50%")),
column(6,
numericInput("area_5x5_walls", label = i18n$t("Bare walls or fences"), value = 0, width = "50%"))
),
fluidRow(
column(6, align="center",
numericInput("area_5x5_anthro", label = i18n$t("Man-made homes"), value = 0, width = "50%")),
column(6,
numericInput("area_5x5_hardSurface", label = i18n$t("Concrete or tarmac"), value = 0, width = "50%"))
),
#PUT IN A CALCULATOR TO CHECK THAT IT EQUALS 25!
HTML("<br/>","<br/>"), #whitespace
# Entry of pollinators
strong(i18n$t("Enter the total number of individuals and species you saw for each pollinator group:")),
HTML("<br/>","<br/>"),
fluidRow(
column(3, align="left", HTML("<br/>"), strong(i18n$t("Bumblebees"))),
column(4, align="center",
numericInput("bombus_tot_individ_5x5", label = i18n$t("Individuals:"), value = 0, width = "50%")),
column(4, align="center",
numericInput("bombus_tot_species_5x5", label = i18n$t("Species:"), value = 0, width = "50%"))),
fluidRow(
column(3, align="left", HTML("<br/>"), strong(i18n$t("Honeybees"))),
column(4, align="center",
numericInput("mellifera_tot_individ_5x5", label = i18n$t(""), value = 0, width = "50%")),
column(4, align="center",
numericInput("mellifera_tot_species_5x5", label = i18n$t(""), value = 0, width = "50%"))),
fluidRow(
column(3, align="left", HTML("<br/>"), strong(i18n$t("Solitary bees"))),
column(4, align="center",
numericInput("apis_tot_individ_5x5", label = i18n$t(""), value = 0, width = "50%")),
column(4, align="center",
numericInput("apis_tot_species_5x5", label = i18n$t(""), value = 0, width = "50%"))),
fluidRow(
column(3, align="left", HTML("<br/>"), strong(i18n$t("Wasps"))),
column(4, align="center",
numericInput("vespid_tot_individ_5x5", label = i18n$t(""), value = 0, width = "50%")),
column(4, align="center",
numericInput("vespid_tot_species_5x5", label = i18n$t(""), value = 0, width = "50%"))),
fluidRow(
column(3, align="left", HTML("<br/>"), strong(i18n$t("Beetles"))),
column(4, align="center",
numericInput("coleoptera_tot_individ_5x5", label = i18n$t(""), value = 0, width = "50%")),
column(4, align="center",
numericInput("coleoptera_tot_species_5x5", label = i18n$t(""), value = 0, width = "50%"))),
fluidRow(
column(3, align="left", HTML("<br/>"), strong(i18n$t("True bugs"))),
column(4, align="center",
numericInput("hemiptera_tot_individ_5x5", label = i18n$t(""), value = 0, width = "50%")),
column(4, align="center",
numericInput("hemiptera_tot_species_5x5", label = i18n$t(""), value = 0, width = "50%"))),
fluidRow(
column(3, align="left", HTML("<br/>"), strong(i18n$t("Butterflies"))),
column(4, align="center",
numericInput("lepidoptera_tot_individ_5x5", label = i18n$t(""), value = 0, width = "50%")),
column(4, align="center",
numericInput("lepidoptera_tot_species_5x5", label = i18n$t(""), value = 0, width = "50%"))),
fluidRow(
column(3, align="left", HTML("<br/>"), strong(i18n$t("Moths"))),
column(4, align="center",
numericInput("moth_tot_individ_5x5", label = i18n$t(""), value = 0, width = "50%")),
column(4, align="center",
numericInput("moth_tot_species_5x5", label = i18n$t(""), value = 0, width = "50%"))),
fluidRow(
column(3, align="left", HTML("<br/>"), strong(i18n$t("Hoverflies"))),
column(4, align="center",
numericInput("syrphidae_tot_individ_5x5", label = i18n$t(""), value = 0, width = "50%")),
column(4, align="center",
numericInput("syrphidae_tot_species_5x5", label = i18n$t(""), value = 0, width = "50%"))),
fluidRow(
column(3, align="left", HTML("<br/>"), strong(i18n$t("Other flies and mosquitos"))),
column(4, align="center",
numericInput("other_diptera_tot_individ_5x5", label = i18n$t(""), value = 0, width = "50%")),
column(4, align="center",
numericInput("other_diptera_tot_species_5x5", label = i18n$t(""), value = 0, width = "50%"))),
HTML("<br/>", "<br/>"), #whitespace
actionButton("showPollinators", i18n$t("Show pollinator data")), #map button
HTML("<br/>", "<br/>"), #whitespace
plotlyOutput("pollinators_1", width = 780, height = 420),
HTML("<br/>", "<br/>"), #whitespace
#floweriness
sliderInput(inputId = "floweriness_5x5", label = i18n$t("Rate your 5x5m survey plot on the floweriness-scale:"),
1, 3, 1, ticks = F),
HTML("<br/>","<br/>"), #whitespace
#flower species
fluidRow(
column(6, align="center",
numericInput("flowers_tot_species_5x5", label = i18n$t("How many different species of flowering plants did you find?"),
value = 0, width = "100%")),
column(6, align="center", textInput("flower_species_freeText_5x5", i18n$t("(Optional) If you identified the species, write the three most common below"),
value = "E.g.: daisy, lavender, orchid", width = "100%"))),
HTML("<br/>", "<br/>"), #whitespace
sliderInput(inputId = "feedback_pollinators", label = i18n$t("How do you rate your experience with using this survey? (Use slider below)"),
1, 5, 3, ticks = F)
),
##########################################
######       INVERTEBRATES 1x1      ######
##########################################
tabItem(tabName = "minibeasts",  align = "center",
## title text
h2(id="minibeast-heading", i18n$t("Minibeasts and Leaves Survey")),
tags$style(HTML("#minibeast-heading{color: #92d050;}")), #ID call for custom colour
i18n$t("Below you can enter the data from the survey of minibeasts and leaves in the 1x1m squares (Part D):"), #Instructions
HTML("<br/>","<br/>"), #whitespace
numericInput("no_1x1_squares", label = i18n$t("How many 1x1m squares did you survey?"),
value = 1, width = "30%"),
HTML("<br/>","<br/>"), #whitespace
#Free-text entry of 1x1 habitats
textInput("habitat_1x1_freeText", i18n$t("What was the dominant habitat for each square? Denote the number of squares with this habitat as the dominant type in parentheses:"),
value = "E.g.: Flower beds or pots (1), tall grass and wildflowers (2), short grass (1)", width = "80%"),
HTML("<br/>","<br/>"), #whitespace
# Entry of pollinators
strong(i18n$t("Enter the total number of individuals and species you saw for each minibeast group:")),
HTML("<br/>","<br/>"),
fluidRow(
column(3, align="left", HTML("<br/>"), strong(i18n$t("Earthworms"))),
column(4, align="center",
numericInput("annelida_tot_indiv_1x1", label = i18n$t("Individuals:"), value = 0, width = "50%")),
column(4, align="center",
numericInput("annelida_tot_species_1x1", label = i18n$t("Species:"), value = 0, width = "50%"))),
fluidRow(
column(3, align="left", HTML("<br/>"), strong(i18n$t("Ants"))),
column(4, align="center",
numericInput("hymenoptera_tot_individ_1x1", label = i18n$t(""), value = 0, width = "50%")),
column(4, align="center",
numericInput("hymenoptera_tot_species_1x1", label = i18n$t(""), value = 0, width = "50%"))),
fluidRow(
column(3, align="left", HTML("<br/>"), strong(i18n$t("Centipedes and millipedes"))),
column(4, align="center",
numericInput("myriapoda_tot_individ_1x1", label = i18n$t(""), value = 0, width = "50%")),
column(4, align="center",
numericInput("myriapoda_tot_species_1x1", label = i18n$t(""), value = 0, width = "50%"))),
fluidRow(
column(3, align="left", HTML("<br/>"), strong(i18n$t("Woodlice"))),
column(4, align="center",
numericInput("isopoda_tot_individ_1x1", label = i18n$t(""), value = 0, width = "50%")),
column(4, align="center",
numericInput("isopoda_tot_species_1x1", label = i18n$t(""), value = 0, width = "50%"))),
fluidRow(
column(3, align="left", HTML("<br/>"), strong(i18n$t("Spiders and harvestmen"))),
column(4, align="center",
numericInput("arachnid_tot_individ_1x1", label = i18n$t(""), value = 0, width = "50%")),
column(4, align="center",
numericInput("arachnid_tot_species_1x1", label = i18n$t(""), value = 0, width = "50%"))),
fluidRow(
column(3, align="left", HTML("<br/>"), strong(i18n$t("Beetles"))),
column(4, align="center",
numericInput("coleoptera_tot_individ_1x1", label = i18n$t(""), value = 0, width = "50%")),
column(4, align="center",
numericInput("coleoptera_tot_species_1x1", label = i18n$t(""), value = 0, width = "50%"))),
fluidRow(
column(3, align="left", HTML("<br/>"), strong(i18n$t("True bugs"))),
column(4, align="center",
numericInput("hemioptera_tot_individ_1x1", label = i18n$t(""), value = 0, width = "50%")),
column(4, align="center",
numericInput("hemiptera_tot_species_1x1", label = i18n$t(""), value = 0, width = "50%"))),
fluidRow(
column(3, align="left", HTML("<br/>"), strong(i18n$t("Insect larvae"))),
column(4, align="center",
numericInput("caterpillar_tot_individ_1x1", label = i18n$t(""), value = 0, width = "50%")),
column(4, align="center",
numericInput("caterpillar_tot_species_1x1", label = i18n$t(""), value = 0, width = "50%"))),
fluidRow(
column(3, align="left", HTML("<br/>"), strong(i18n$t("Snails and slugs"))),
column(4, align="center",
numericInput("gastropoda_tot_individ_1x1", label = i18n$t(""), value = 0, width = "50%")),
column(4, align="center",
numericInput("gastropoda_tot_species_1x1", label = i18n$t(""), value = 0, width = "50%"))),
fluidRow(
column(3, align="left", HTML("<br/>"), strong(i18n$t("Other minibeasts"))),
column(4, align="center",
numericInput("other_tot_individ_1x1", label = i18n$t(""), value = 0, width = "50%")),
column(4, align="center",
numericInput("other_diptera_tot_species_1x1", label = i18n$t(""), value = 0, width = "50%"))),
HTML("<br/>", "<br/>"), #whitespace
actionButton("showInvertebrates", i18n$t("Show minibeast data")), #map button
HTML("<br/>", "<br/>"), #whitespace
plotOutput("invertebrates_1", width = 780, height = 420),
HTML("<br/>","<br/>","<br/>","<br/>"), #whitespace
#floweriness
fluidRow(
column(6, align="center",
sliderInput(inputId = "vegetation_cover_1x1", label = i18n$t("Rate the mean of your 1x1m survey plot on the vegetation cover-scale:"),
1, 3, 1, ticks = F)),
column(6, align="center",
numericInput("leaf_diversity_1x1", label = i18n$t("How many different types of leaves do you find in all 1x1m squares?"),
value = 0, width = "100%"))),
HTML("<br/>", "<br/>"), #whitespace
#feedback
sliderInput(inputId = "feedback_minibeasts", label = i18n$t("How do you rate your experience with using this survey? (Use slider below)"),
1, 5, 3, ticks = F)
),
#######################################
tabItem(tabName = "submit", align = "center",
titlePanel(i18n$t("Submit data")),
HTML("<br/>", "<br/>", "<br/>", "<br/>"), # white space
strong(i18n$t("Thank you for completing the data entry! Please control that all answers are correct before downloading the data. Kindly send this file to [...] so your data can be included in the research project and added to the website. Thank you for your participation.")),
HTML("<br/>", "<br/>"),
#download data button
downloadButton('downloadData', i18n$t('Download'), width ="110%"),
HTML("<br/>", "<br/>", "<br/>", "<br/>"), # white space
HTML("<br/>", "<br/>", "<br/>", "<br/>","<br/>", "<br/>", "<br/>", "<br/>"), # white space
imageOutput("allLogo", height = 100), # banner logo)
HTML("<br/>", "<br/>", "<br/>", "<br/>", "<br/>"),
imageOutput("nbisLogo", height = 100) # banner logo)
#######################################
)
),
useShinyjs()) #custom layou for navbar
)
server <- function(input, output, session) {
# Whenever a field is filled, aggregate all form data
formData <- reactive({
data <- sapply(fields, function(x) input[[x]])
data
})
# When country is selected, this will feed into shiny.i18n for translatio
observeEvent(input$countrySelect, {
update_lang(session, input$selected_language)
})
# When the Submit button is clicked, save the form data BEES
observeEvent(input$showMap, {
saveData(formData())
})
# When the Submit button is clicked, save the form data WEATHER
observeEvent(input$showWeather, {
saveData(formData())
})
# When the Submit button is clicked, save the form data HABITAT
observeEvent(input$showHabitat, {
saveData(formData())
})
# When the Submit button is clicked, save the form data YARD
observeEvent(input$showYard, {
saveData(formData())
})
# When the Submit button is clicked, save the form data BIRDS
observeEvent(input$showBirds, {
saveData(formData())
})
# When the Submit button is clicked, save the form data POLLINATORS
observeEvent(input$showPollinators, {
saveData(formData())
})
# When the Submit button is clicked, save the form data INVERTEBRATES
observeEvent(input$showInvertebrates, {
saveData(formData())
})
# Show the previous responses
# (update with current response when Submit is clicked)
output$responses <- DT::renderDataTable({
input$showWeather
loadData()
})
# Show the previous responses
# (update with current response when Submit is clicked)
output$responses <- DT::renderDataTable({
input$showMap
loadData()
})
# render map
output$mymap <- renderLeaflet({
input$showMap
loadData()
mapFunc()
})
# Show the previous responses
# (update with current response when Submit is clicked)
output$responses <- DT::renderDataTable({
input$showHabitat
loadData()
})
# Show the previous responses
# (update with current response when Submit is clicked)
output$responses <- DT::renderDataTable({
input$showYard
loadData()
})
# Show the previous responses
# (update with current response when Submit is clicked)
output$responses <- DT::renderDataTable({
input$showBirds
loadData()
})
# Show the previous responses
# (update with current response when Submit is clicked)
output$responses <- DT::renderDataTable({
input$showPollinators
loadData()
})
# Show the previous responses
# (update with current response when Submit is clicked)
output$responses <- DT::renderDataTable({
input$showInvertebrates
loadData()
})
# render barplot of most common habitat
output$habitat_1 <- renderPlot({
input$showHabitat
loadData()
plot_func1_habitat()
}, bg="transparent")
# render correlation tree species ~ yard
output$yard_1 <- renderPlot({
input$showYard
loadData()
plot_func2_yard()
}, bg="transparent")
output$birds_1 <- renderPlot({
input$showBirds
loadData()
plot_func3_birds()
}, bg="transparent")
output$pollinators_1 <- renderPlotly({
input$showPollinators
loadData()
plot_func4_pollinators()
})
output$invertebrates_1 <- renderPlot({
input$showInvertebrates
loadData()
plot_func5_invertebrates()
}, bg="transparent")
# render barplot of temperature
output$temp <- renderPlot({
input$showWeather
loadData()
plot_func6_temperature()
}, bg="transparent")
# Download button
output$downloadData <- downloadHandler(
filename = function() {paste('data-', Sys.Date(), '-', length(responses$School), '.csv', sep='')
},
content = function(file) {write.csv2(t(formData()), file)
}
)
# render natnat logo
output$natNatLogo <- renderImage({list(src = "./logo2.png",
contentType = "image/png",alt = "logo", height = 120)}, deleteFile = FALSE)
# render footer logo
output$footerLogo <- renderImage({list(src = "./footer.png",
contentType = "image/png",alt = "logo", height = 120)}, deleteFile = FALSE)
# render logo
output$allLogo <- renderImage({list(src = "./logo1.png",
contentType = "image/png",alt = "logo", height = 200)}, deleteFile = FALSE)
output$nbisLogo <- renderImage({list(src = "./nbisLogo.png",
contentType = "image/png",alt = "logo", height = 120)}, deleteFile = FALSE)
runjs({'
var el2 = document.querySelector(".skin-blue");
el2.className = "skin-blue sidebar-mini";
var clicker = document.querySelector(".sidebar-toggle");
clicker.id = "switchState";
'})
onclick('switchState',
runjs({'
var title = document.querySelector(".logo")
if (title.style.visibility == "hidden") {
title.style.visibility = "visible";
} else {
title.style.visibility = "hidden";
}
'}))
}
shinyApp(ui, server)
